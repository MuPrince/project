package com.prince.util.algorithmImpl.search.tree;


/**
 * @description: 红黑树 treap
 *              红黑树的定义：
 * 　　               红黑树是一种具有红色和黑色链接的平衡查找树，同时满足：
 *                      红色节点向左倾斜
 *                      一个节点不可能有两个红色链接
 *                      整个树完全黑色平衡，即从根节点到所以叶子结点的路径上，黑色链接的个数都相同。
 *              基本思想：红黑树的思想就是对2-3查找树进行编码，尤其是对2-3查找树中的3-nodes节点添加额外的信息。
 *              红黑树中将节点之间的链接分为两种不同类型，红色链接，他用来链接两个2-nodes节点来表示一个3-nodes节点。黑色链接用来链接普通的2-3节点。
 *              特别的，使用红色链接的两个2-nodes来表示一个3-nodes节点，并且向左倾斜，即一个2-node是另一个2-node的左子节点。
 *              这种做法的好处是查找的时候不用做任何修改，和普通的二叉查找树相同。
 *              红黑树的性质：整个树完全黑色平衡，即从根节点到所以叶子结点的路径上，黑色链接的个数都相同（2-3树的第2）性质，从根节点到叶子节点的距离都相等）。
 * 　　          复杂度分析：最坏的情况就是，红黑树中除了最左侧路径全部是由3-node节点组成，即红黑相间的路径长度是全黑路径长度的2倍。
 * @author Prince
 * @time 2020/9/25 14:08
 */
public class RedBlackTree {
}
